spring:
  sql:
    init:
      platform: postgresql
      mode: always      
  datasource:    
    url: jdbc:postgresql://localhost:5432/testdb
    driver-class-name: org.postgresql.Driver 
    username: postgres
    password: password	
    # PostgreSQLはデフォルトautocommit=trueなので、カーソルがオンメモリ処理にならないようautocommit=false
    hikari:
      auto-commit: false
  #　デモAPとして簡単のためSpringBatchのテーブルのPostgreSQLのスキーマを起動時に作成（本来は、DDLを実行し事前作成すべき）
  batch:
    jdbc:
      initialize-schema: always
# Spring Cloud for AWS Parameter Store & Integration Secreters Manager Integration
  config:
    import: 
    - aws-parameterstore:/config/common;/config/sample-batch
    - aws-secretsmanager:/secrets/database-secrets?prefix=spring.datasource.

management:
  endpoints:
    web:
      discovery:
        enabled: false
        
resilience4j:
  timelimiter:
    configs:
      default:
        timeoutDuration: 3s
aws:
  sqs:    
    number-of-messages-to-prefetch: 0
    listener:
      queue-name: SampleQueue      
      concurrency: 5
  s3:
    bucket: mysd33bucket123
    region: ap-northeast-1

logging:
  level:
    org.springframework: INFO
    org.springframework.jdbc: INFO
    com.example: DEBUG    
    org.springframework.context.support.ResourceBundleMessageSource: ERROR
    
api:
  backend:
    url: http://localhost:8000    
  retry:
    max-attempts: 3
    min-backoff: 200
    
job002:
  chunk-size: 5     